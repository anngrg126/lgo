.card
  .row
    .columns.medium-9.large-8.story-form
      .card-section
        div#error_block
      - if (controller.action_name == "new") || (controller.action_name == "edit" && !@story.published )
        = form_for(@story, :html => {class: "form", multipart: true}, remote: true) do |f|
          .card-section[style="padding-top: 0px;"]
            - if (controller.action_name == "new") || (controller.action_name == "edit" && @story.raw_title == "" )
              h2
                = f.label :raw_title, "Give your story a title"
            - else
              h2
                = f.label :raw_title, "Your story title"
            .subtext
              | &nbsp;&nbsp;(optional)            
            = f.text_field :raw_title, autofocus: true, value: @story.raw_title
            span class="form-error"
            .subtext
              | We'll lend a hand if you can't think of one. You can always change it later.
          .card-section
            h2
              = f.label :raw_body, "Compose your story here"
            = f.trix_editor :raw_body, class: "body"
            span class="form-error"
            = f.check_box :anonymous, type: "checkbox"
            = f.label :anonymous, "Post anonymously", class: "subtext", style: "color: #0a0a0a;"
          - if (controller.action_name == "new")
            .card-section
              h2[style="margin-bottom: 10px;"] Images
              .subtext 
                | &nbsp;&nbsp;(optional)
              #picture_fields
                = f.fields_for :pictures do |picture|
                  = picture.file_field :image, multiple: true, :name =>"image[]", class: "image-input"
                  /OTHERWISE, the name would be: /story[pictures_attributes][0][image][]
                  = picture.label :image, "Choose a file", class: "image-label" do
                    .text-center
                      .fa.fa-camera.fa-2x
                      p upload an image
                .links
                  = link_to_add_association 'Add another image', f, :pictures
                span class="form-error"
          .card-section
            h2
              = f.label :raw_gift_description, "In 10 words or less, what was the gift?"
            .subtext
              | &nbsp;&nbsp;(optional)
            = f.text_field :raw_gift_description, autofocus: true, value: @story.raw_gift_description
            span class="form-error"
            .subtext
              | We'll help you if you leave this blank. You can always change it later.
          .card-section
            h2 Is your story about a gift fail?
            .subtext
              | &nbsp;&nbsp;(optional)
            br
            = f.check_box :fail, type: "checkbox"
            = f.label :fail, "Yes"
            input[type="checkbox"]
            label No
          .card-section
            h2 Review
            .subtext
              | &nbsp;&nbsp;(optional)
            p Our team of editors can help with minor spelling and grammar touch-ups to bring our the best in your story. This service is free, and you can always make changes later. 
            = f.radio_button :review, false
            = f.label :review, "No, thanks"
            = f.radio_button :review, true
            = f.label :review, "Yes, thanks a lot!"
          .card-section.text-center
            - sanitize @story.raw_body
            - if controller.action_name == "edit"
              = f.submit "Edit Story", class: "button"
              = button_tag t('buttons.cancel'), type: "submit", name: "cancel", value: true
            - else
              = f.submit "Contribute Story", class: "button"
      - elsif controller.action_name == "edit"
        = form_for(@story, :html => {class: "form"}, remote: true) do |f|
          div
            = f.label :updated_title, "Title"
            = f.text_field :updated_title, autofocus: true, value: (@story.last_user_to_update == "Admin") ? @story.final_title : @story.updated_title
            span class="form-error"
          div
            = f.label :updated_body, "Body"
            == f.trix_editor :updated_body
            span class="form-error"
          div
            = f.label :updated_gift_description, "Gift Description"
            = f.text_field :updated_gift_description, autofocus: true, value: (@story.last_user_to_update == "Admin") ? @story.final_gift_description : @story.updated_gift_description
            span class="form-error"
          div
            = f.label :anonymous
            = f.check_box :anonymous, type: "checkbox"
          div 
            = f.label :fail
            = f.check_box :fail, type: "checkbox"
          div
            - unless @story.final_title?
              = f.radio_button :review, false
              = f.label :review, "No, thanks", checked: true
              = f.radio_button :review, true
              = f.label :review, "Yes, thanks a lot!"
          div
            - sanitize @story.updated_body
            = f.submit class: "button"
            = button_tag t('buttons.cancel'), type: "submit", name: "cancel", value: true
script
  == render partial: 'trix_input_id.js.erb', story: @story
javascript:
  'use strict';
  ;( function( $, window, document, undefined ) {
    //$( '.image-input' ).each( function() {
      //var $input	 = $( this ),
          //$label	 = $input.next( 'label' );
          //labelVal   = $label.html();
      $( '.image-input' ).on( 'change', function( e ) {
        var fileCount = '',
            fileName  = '',
            $label	  = $( this ).next( 'label' ),
            links     = '';
        if( this.files && this.files.length > 1 ) {
          //fileName = ( this.getAttribute( 'data-multiple-caption' ) || '' ).replace( '{count}', this.files.length );
          fileCount = this.files.length
        } else if( e.target.value ) {
          fileName = e.target.value.split( '\\' ).pop();
        };
        
        if( fileCount ) {
          if (fileCount > 1) {
            $label.find( 'p' ).html( fileCount.toString()+" files selected" );
          } else {
            $label.find( 'p' ).html( fileCount.toString()+" file selected" );
          }
          links = true;
        } else {
            //$label.html( labelVal );
        };
        if( fileName ) {
          $label.find( 'p' ).html( fileName );
          links = true;
        }
        if (links) {
          $(".links").css("display", "block"); 
        }
      });
      // Firefox bug fix
      $( '.image-input' )
      .on( 'focus', function(){ $( this ).addClass( 'has-focus' ); })
      .on( 'blur', function(){ $( this ).removeClass( 'has-focus' ); });
    //});    
      $( '.add_fields').click( function() {
        //console.log("wheofslj1");
        $( document ).on('cocoon:after-insert', function(e, insertedItem) {
        //console.log( insertedItem);
          $(insertedItem).find("input").each(function() {
            $(this).addClass("image-input");
          })
          $(insertedItem).find("input[type='hidden']").after('<label class="image-label" for="story_pictures_attributes_0_image"><div class="text-center"><div class="fa fa-camera fa-2x"></div><p>upload an image</p></div></label>');
          $(".links").css("display", "none"); 
        });  
      });
  })( jQuery, window, document );