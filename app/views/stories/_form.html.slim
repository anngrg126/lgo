- if (controller.action_name == "new") || (controller.action_name == "edit" && !@story.final_title )
  = form_for(@story, :html => {class: "form", multipart: true}, remote: true) do |f|
    div 
      = f.fields_for :pictures do |picture_fields|
        = picture_fields.label :image
        /= picture_fields.file_field :image, multiple: true
        = picture_fields.file_field :image
        /= file_field_tag :image, multiple: true



        /= picture_fields.input :image, as: :file, multiple: true
        /= picture_fields.label :test_column
        /= picture_fields.text_field :test_column
        
        /= file_field_tag "images[]", type: :file, multiple: true
        
        /- unless picture_fields.object_new_record?
          /= link_to_remove_association 
      
      
      /- unless f.object_new_record?
        br
          = link_to_remove_association "Delete Picture", f
      /= f.label :image
      /= f.file_field :image, multiple: true
      
      
      
      
        /= render partial: 'pictures_fields', f: image
      /.links
        br
          = link_to_add_association 'Add another image', f
      /= f.label :image
      /= f.file_field :image, multiple: true
      span class="form-error"
    div
      = f.label :raw_title, "Title"
      = f.text_field :raw_title, autofocus: true, value: @story.raw_title
      span class="form-error"
    div
      = f.label :raw_body, "Body"
      = f.trix_editor :raw_body
      span class="form-error"
    div
      = f.label :anonymous
      = f.check_box :anonymous, type: "checkbox"
    div
      = sanitize @story.raw_body
      = f.submit "Contribute Story", class: "button"
- elsif controller.action_name == "edit"
  = form_for(@story, :html => {class: "form"}, remote: true) do |f|
    div
      = f.label :updated_title, "Title"
      = f.text_field :updated_title, autofocus: true, value: (@story.updated_at.to_i > @story.admin_updated_at.to_i) ? @story.updated_title : @story.final_title
      span class="form-error"
    div
      = f.label :updated_body, "Body"
      == f.trix_editor :updated_body
      span class="form-error"
    div
      = f.label :anonymous
      = f.check_box :anonymous, type: "checkbox"
    div
      = sanitize @story.updated_body
      = f.submit class: "button"
      = button_tag t('buttons.cancel'), type: "submit", name: "cancel", value: true
script
  == render partial: 'trix_input_id.js.erb', story: @story